#
# Make for sample binary, sampleBIN, which don't use TUXEDO
#

include ../makefile.appdefs

# artifact NAME
ART_NAME=sampbin

# artifact objects
OBJS = \
cpp1.o \
cpp2.o


# artifact dependencies that auto-generated by MAKE
C_DEPS=$(OBJS:.o=.d)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif


# this atrifact
TARGETS=$(APPBINDIR)/$(ART_NAME)


# search path for source codes of $TARGETS, and
# use space character to separate two path
VPATH=$(TOPSRC)/$(ART_NAME)

# options to compiler for $TARGETS
# -I for header files' search path
# -D for define one MACRO
MYDEF=

# options to linker for $TARGETS
# -L for library search path
# -l for one library to be linked
MYLIB=


all: $(TARGETS)

$(APPBINDIR)/$(ART_NAME): $(OBJS)
	@$(ECHO) 'Building target: $@'
	$(LD) -o $@ $(OBJS) $(MYLIB) ${LIBOPTS}
	@$(ECHO) 'Finished building target: $@'
	@$(ECHO) ' '


%.o: %.cpp
	$(CC) -c -o $@ $(CFLAGS) $(MYDEF) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" $<
	@$(ECHO) ' '

%.o: %.c
	$(CC) -c -o $@ $(CFLAGS) $(MYDEF) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" $<
	@$(ECHO) ' '


clean:
	-$(RM) $(OBJS) $(C_DEPS) $(TARGETS)
	-@echo ' '

mostlyclean:
	-$(RM) $(OBJS) $(C_DEPS)
	-@$(ECHO) ' '

install: $(TARGETS)
	@$(CP) $(APPBINDIR)/$(ART_NAME) $(INSTBINDIR)/
	@$(ECHO) 'The $(ART_NAME) has copied to $(INSTBINDIR).'
	@$(ECHO) ' '

