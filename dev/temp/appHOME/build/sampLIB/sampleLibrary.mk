#
# Make for sample library, libsample
#

include ../makefile.appdefs

# artifact NAME
ART_NAME=libsample
ART_AR=$(ART_NAME)$(DLLEXT)
ART_SO=$(ART_NAME)$(SLLEXT)

# artifact objects
OBJS = \
cpp1.o \
cpp2.o


# artifact dependencies that auto-generated by MAKE
C_DEPS=$(OBJS:.o=.d)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif


# this atrifact
TARGETS=$(APPLIBDIR)/$(ART_AR) $(APPLIBDIR)/$(ART_SO)


# search path for source codes of $TARGETS, and
# use space character to separate two path
VPATH=$(TOPSRC)/$(ART_NAME)

# options to compiler for $TARGETS
# -I for header files' search path
# -D for define one MACRO
MYDEF=

# options to linker for $TARGETS
# -L for library search path
# -l for one library to be linked
MYLIB=


all: $(TARGETS)

$(APPLIBDIR)/$(ART_AR): $(OBJS)
	@$(ECHO) 'Building target: $@'
	@$(AR) $(AROPT) $@ $(OBJS)
	@$(ECHO) 'Finished building target: $@'
	@$(ECHO) ' '

$(APPLIBDIR)/$(ART_SO): $(OBJS)
	@$(ECHO) 'Building target: $@'
	$(LD) -o $@ $(SOFLAG) $(OBJS) $(MYLIB) ${GOLPLIBS}
	@$(ECHO) 'Finished building target: $@'
	@$(ECHO) ' '


clean:
	-$(RM) $(OBJS) $(C_DEPS) $(TARGETS)
	-@echo ' '

mostlyclean:
	-$(RM) $(OBJS) $(C_DEPS)
	-@$(ECHO) ' '

install: $(TARGETS)
	@$(CP) $(APPLIBDIR)/$(ART_SO) $(INSTLIBDIR)/
	@$(CP) $(APPLIBDIR)/$(ART_AR) $(INSTLIBDIR)/
	@$(ECHO) 'The $(ART_NAME) has copied to $(INSTLIBDIR).'
	@$(ECHO) ' '

include defrule.mk

